# 新增环境
sudo apt install sqlite3
sudo apt install libsqlite3-dev

# 海康SDK库复制到系统库目录
sudo cp /home/topeet/code/gate_people_counting_hiksdk_SQLiet_485_SDKv40_mask/hiklib/libAudioRender.so /usr/lib/
# 批量复制
sudo cp /home/topeet/code/gate_people_counting_hiksdk_SQLiet_485_SDKv40_mask/hiklib/*.so /usr/lib/
# 更新缓存
sudo ldconfig
# 验证是否生效
ldd ./build/yolov8_thread_pool_hik | grep AudioRender


# 链接库
target_link_libraries(yolov8_thread_pool
        draw_lib
        yolov8_lib
        pthread  # 添加 pthread
)


编译：
rm -rf build  # 如果项目名称和内容发生变化，删除旧的 build 目录（包括 CMakeCache.txt）
cmake -S . -B build  # 重新生成
cmake --build build/

更换数据集对应参数：
# 位置1：src/process/postprocess.cpp 第59行
static int class_num = 5;

# 位置2：src/task/yolov8_custom.cpp 第8行
static std::vector<std::string> g_classes = {
"pedestrians", "riders", "partially-visible-person", "ignore-regions", "crowd"};

注意和量化推理时的参数一致：
objectThresh = 0.2
nmsThresh = 0.5

# 修改数据库db文件位置
在 src/task/comm.cpp中的 init_send_db()
在src/yolov8_thread_pool_hik.cpp中 InitDatabase

# 修改458串口号：
在src/yolov8_thread_pool_hik.cpp中 init_serial_comm("/dev/tty0");

# 权限，SQL数据库确保目录可写
chmod 777 ./detection_results.db 
chmod 777 ./detection_results_send.db
chmod 777 /home/cat/code/gate_people_counting_hiksdk_SQLiet_485/
# 权限，串口
sudo chmod 666 /dev/tty0
sudo chmod 666 /dev/ttyS9

crontab -e    # 打开编辑
crontab -l    # 确认
@reboot /bin/chmod 666 /dev/ttyS9
@reboot nohup /home/topeet/code/gate_people_counting/build/yolov8_thread_pool_hik /home/topeet/code/gate_people_counting/weights/Gate_people_counting_8n_int.rknn /home/topeet/code/gate_people_counting/cameras_config.txt 20 > /home/topeet/code/gate_people_counting/yolov8_thread_pool_hik.log 2>&1 &

3、自启动测试

# 重新启动监控：
pkill -f monitor.sh
/home/topeet/code/monitor.sh
/home/topeet/code/monitor.sh &  # 后台运行监控脚本
nohup /home/topeet/code/monitor.sh > /home/topeet/code/monitor.log 2>&1 &  # 更健壮运行方式

# 手动杀死进程，模拟进程崩溃
sudo pkill -9 -f "yolov8_thread_pool_hik"  # 强制关闭进程

#查看进程
pgrep -af "monitor.sh"  # 精确匹配脚本名
ps aux | grep "monitor.sh"  # 查看完整进程信息
pgrep -af "yolov8_thread_pool_hik"  # 精确匹配进程名
ps aux | grep "yolov8_thread_pool_hik"  # 查看完整进程信息



海康SDK视频流格式：
rtsp://admin:hik12345@10.60.86.249:554//Streaming/Channels/101
rtsp://admin:hik12345@10.60.86.249:554//Streaming/Channels/1

./build/yolov8_thread_pool ./weights/Gate_people_counting_8n_int.rknn ./media/闸机行人检测_1920_1080_40000kbps.mp4 20
./build/yolov8_thread_pool_counting ./weights/Gate_people_counting_8n_int.rknn ./media/闸机行人检测_1920_1080_40000kbps.mp4 20
./build/yolov8_thread_pool_counting ./weights/yolov8s.int.rknn rtsp://admin:hik12345@10.60.86.249:554//Streaming/Channels/101 20

./build/yolov8_video ./weights/yolov8s.int.rknn ./media/闸机行人检测_1920_1080_40000kbps.mp4 1
./build/yolov8_video ./weights/Gate_people_counting_8n_int.rknn ./media/闸机行人检测_1920_1080_40000kbps.mp4 1


# 基于海康SDK的运行命令
./build/yolov8_thread_pool_hik ./weights/yolov8s.int.rknn cameras_config.txt 30
./build/yolov8_thread_pool_hik ./weights/Gate_people_counting_8n_int.rknn cameras_config.txt 20
./build/yolov8_thread_pool_hik ./weights/Gate_people_countingv32_8n_int.rknn cameras_config.txt 20


# 查看数据库内容
# 查看检测结果表的所有数据：
sqlite3 detection_results.db "SELECT * FROM detection_results ORDER BY id DESC;"
# 查看最新的5条记录：
sqlite3 detection_results.db "SELECT * FROM detection_results ORDER BY id DESC LIMIT 5;"
# 查看表结构：
sqlite3 detection_results.db ".schema detection_results"
